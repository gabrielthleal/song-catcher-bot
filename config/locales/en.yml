# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t 'hello'
#
# In views, this is aliased to just `t`:
#
#     <%= t('hello') %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# The following keys must be escaped otherwise they will not be retrieved by
# the default I18n backend:
#
# true, false, on, off, yes, no
#
# Instead, surround them with single quotes.
#
# en:
#   'true': 'foo'
#
# To learn more, please read the Rails Internationalization guide
# available at https://guides.rubyonrails.org/i18n.html.

en:
  telegram: 
    welcome: "*Welcome!!*\nFind your Spotify songs from here. 
              We'll create a playlist on your *Spotify* called *Telegram* where
              you'll find all songs that were added here.
              *Commands and Buttons:* \nTap to *Authorizate* button to be able to find and add songs to your playlist.
              \nTap to *Language* to change the bot language.
              \nTap to *Menu* button or just send *menu* as message to get back to *menu*.
              "
    authorization: "If is your first time here, you'll need to authorize the bot with your 
                    Spotify account to enable search button. Click on the below link.
                    "
    authorization_btn: "Authorize"  
    search_song_btn: 'Search ðŸ”Ž'
    language_txt: 'Which language do you want to the bot? Choose one below'  
    language_btn: 'Language'
    language_answer: 'Alterado!'        
    not_found: "Not found. Make sure that the song name is correct and try again"
    add_song: "Do you want to add this song?"
    add_song_btn: "Add to Spotify"    
    callback_answer: 'Successyfully added'
    can_search: 'âœ… *You can search already* âœ…'           
  

